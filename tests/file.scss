// Variables
$primary-color: #3498db;
$padding: 16px;
$font-stack: Helvetica, sans-serif;

// Nesting
nav {
  ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  li {
    display: inline-block;
    margin-right: 10px;
  }

  a {
    display: block;
    padding: $padding;
    color: $primary-color;
    text-decoration: none;
  }
}

// Parent selector
.button {
  font-family: $font-stack;

  &:hover {
    background-color: darken($primary-color, 10%);
  }

  &.active {
    background-color: lighten($primary-color, 10%);
  }
}

// Placeholder selectors
%card {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  padding: 20px;
}

.card {
  @extend %card;
  background: white;
}

// Mixins
@mixin center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.header {
  @include center;
  height: 60px;
  background: $primary-color;
}

// Functions
@function px-to-rem($px) {
  @return ($px / 16px) * 1rem;
}

.text {
  font-size: px-to-rem(24px);
}

// Control directives
@mixin respond-to($breakpoint) {
  @if $breakpoint == mobile {
    @media (max-width: 600px) {
      @content;
    }
  } @else if $breakpoint == tablet {
    @media (max-width: 1024px) {
      @content;
    }
  }
}

.container {
  width: 1200px;

  @include respond-to(mobile) {
    width: 100%;
  }
}

// Loops
@for $i from 1 through 3 {
  .col-#{$i} {
    width: (100% / 3) * $i;
  }
}

@each $platform in facebook, twitter, instagram {
  .icon-#{$platform} {
    background-image: url("/images/#{$platform}.png");
  }
}

// Conditionals
$theme: light;

body {
  @if $theme == dark {
    background: black;
    color: white;
  } @else {
    background: white;
    color: black;
  }
}

// Imports
@import "reset";
@import "typography";
@import "grid";

// Comments
// Single-line comment

/*
 Multi-line comment
 explaining things here.
*/

// Interpolation
$base: "section";

.#{$base}-header {
  font-size: 2rem;
}

// Operators
.box {
  width: calc(100% - 20px);
  height: calc(100vh / 2);
}

// Nested properties
.button {
  border: {
    width: 1px;
    style: solid;
    color: $primary-color;
  }
}

// Optional arguments in mixins
@mixin shadow($color: rgba(0, 0, 0, 0.3)) {
  box-shadow: 0 4px 6px $color;
}

.panel {
  @include shadow;
}
.panel-dark {
  @include shadow(rgba(0, 0, 0, 0.7));
}
